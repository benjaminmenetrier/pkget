#!/usr/bin/env bash

# Local install directory
LOCALDIR=${HOME}/local

# Print
echo "Local directory: "${LOCALDIR}
echo
echo "Paths to add in your .bashrc:"
echo "- ${LOCALDIR}/usr/bin"
echo "- ${LOCALDIR}/bin"
echo "- ${LOCALDIR}/sbin"
echo "- ${LOCALDIR}/usr/share"
echo "- ${LOCALDIR}/usr/lib"

# Functions
function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo ">>> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

set -e

CACHE_DIR=/tmp
APT_CACHE_DIR=$CACHE_DIR/apt/cache
APT_STATE_DIR=$CACHE_DIR/apt/state
APT_SOURCELIST_DIR=$CACHE_DIR/apt/sources  # you can your place custom sources.list here
APT_SOURCES=$APT_SOURCELIST_DIR/sources.list

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
APT_OPTIONS="$APT_OPTIONS -o dir::etc::sourcelist=$APT_SOURCES"

rm -rf $APT_CACHE_DIR
mkdir -p $APT_CACHE_DIR/archives/partial
mkdir -p $APT_STATE_DIR/lists/partial
mkdir -p $APT_SOURCELIST_DIR
cat "/etc/apt/sources.list" > $APT_SOURCES

#topic "Updating apt caches"
#apt-get $APT_OPTIONS update | indent

for PACKAGE in $*; do
  if [[ $PACKAGE == *deb ]]; then
    topic "Copying $PACKAGE"
    PACKAGE_NAME=$(basename $PACKAGE .deb)
    PACKAGE_FILE=$APT_CACHE_DIR/archives/$PACKAGE_NAME.deb
    cp -f $PACKAGE $PACKAGE_FILE | indent
  else
    topic "Fetching .debs for $PACKAGE"
    apt-get $APT_OPTIONS -y --force-yes -d install --reinstall $PACKAGE | indent
  fi
done

mkdir -p ${LOCALDIR}

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB ${LOCALDIR}/
done

topic "Rewrite package-config files"
find ${LOCALDIR} -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='${LOCALDIR}'\1!g'
